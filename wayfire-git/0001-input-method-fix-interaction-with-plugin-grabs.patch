From ce72f986abf7d6384fa952ae8c15e7354ba1f3f2 Mon Sep 17 00:00:00 2001
From: lilydjwg <lilydjwg@gmail.com>
Date: Wed, 10 Jan 2024 17:43:17 +0800
Subject: [PATCH] input method: fix interaction with plugin grabs

IM sent keys got sent to grab nodes after returning from
handle_keyboard_key. This caused e.g. the switcher plugin to deactivate
early, or not deactivate.
---
 src/core/seat/keyboard.cpp  | 33 +++++++++++++--------------------
 src/core/seat/keyboard.hpp  |  2 +-
 src/core/seat/seat-impl.hpp |  1 +
 src/core/seat/seat.cpp      |  2 ++
 4 files changed, 17 insertions(+), 21 deletions(-)

diff --git a/src/core/seat/keyboard.cpp b/src/core/seat/keyboard.cpp
index 449082c7..88c7d861 100644
--- a/src/core/seat/keyboard.cpp
+++ b/src/core/seat/keyboard.cpp
@@ -38,8 +38,9 @@ void wf::keyboard_t::setup_listeners()
         }
 
         seat->priv->set_keyboard(this);
-        if (!handle_keyboard_key(ev->time_msec, ev->keycode,
-            ev->state) && (mode == input_event_processing_mode_t::FULL))
+        auto is_im_sent = wf::get_core_impl().im_relay->is_im_sent(handle);
+        if ((is_im_sent || !handle_keyboard_key(ev->keycode, ev->state))
+                && (mode == input_event_processing_mode_t::FULL))
         {
             if (ev->state == WL_KEYBOARD_KEY_STATE_PRESSED)
             {
@@ -57,7 +58,15 @@ void wf::keyboard_t::setup_listeners()
                 }
             }
 
-            if (seat->priv->keyboard_focus)
+            // don't send IM sent keys to plugin grabs
+            if (!seat->priv->is_grab)
+            {
+                if (wf::get_core_impl().im_relay->handle_key(handle, ev->time_msec, ev->keycode, ev->state))
+                {
+                    return;
+                }
+            }
+            if (seat->priv->keyboard_focus && !(seat->priv->is_grab && is_im_sent))
             {
                 seat->priv->keyboard_focus->keyboard_interaction()
                     .handle_keyboard_key(wf::get_core().seat.get(), *ev);
@@ -287,19 +296,13 @@ bool wf::keyboard_t::has_only_modifiers()
     return true;
 }
 
-bool wf::keyboard_t::handle_keyboard_key(uint32_t time, uint32_t key, uint32_t state)
+bool wf::keyboard_t::handle_keyboard_key(uint32_t key, uint32_t state)
 {
     using namespace std::chrono;
 
     auto& input = wf::get_core_impl().input;
     auto& seat  = wf::get_core_impl().seat;
 
-    if (wf::get_core_impl().im_relay->is_im_sent(handle))
-    {
-        mod_binding_key = 0;
-        return false;
-    }
-
     bool handled_in_plugin = false;
     auto mod = mod_from_key(key);
     input->locked_mods = this->get_locked_mods();
@@ -328,11 +331,6 @@ bool wf::keyboard_t::handle_keyboard_key(uint32_t time, uint32_t key, uint32_t s
 
         handled_in_plugin |= wf::get_core().bindings->handle_key(
             wf::keybinding_t{get_modifiers(), key}, mod_binding_key);
-
-        if (!handled_in_plugin)
-        {
-            handled_in_plugin |= wf::get_core_impl().im_relay->handle_key(handle, time, key, state);
-        }
     } else
     {
         if (mod_binding_key != 0)
@@ -349,11 +347,6 @@ bool wf::keyboard_t::handle_keyboard_key(uint32_t time, uint32_t key, uint32_t s
             }
         }
 
-        if (!handled_in_plugin)
-        {
-            handled_in_plugin |= wf::get_core_impl().im_relay->handle_key(handle, time, key, state);
-        }
-
         mod_binding_key = 0;
     }
 
diff --git a/src/core/seat/keyboard.hpp b/src/core/seat/keyboard.hpp
index e982148b..9e4c4fda 100644
--- a/src/core/seat/keyboard.hpp
+++ b/src/core/seat/keyboard.hpp
@@ -50,7 +50,7 @@ class keyboard_t
 
     std::chrono::steady_clock::time_point mod_binding_start;
 
-    bool handle_keyboard_key(uint32_t time, uint32_t key, uint32_t state);
+    bool handle_keyboard_key(uint32_t key, uint32_t state);
 
     /** Get the current locked mods */
     uint32_t get_locked_mods();
diff --git a/src/core/seat/seat-impl.hpp b/src/core/seat/seat-impl.hpp
index 2c00c250..f668bb31 100644
--- a/src/core/seat/seat-impl.hpp
+++ b/src/core/seat/seat-impl.hpp
@@ -57,6 +57,7 @@ struct seat_t::impl
 
     void set_keyboard_focus(wf::scene::node_ptr keyboard_focus);
     wf::scene::node_ptr keyboard_focus;
+    bool is_grab = false;
     // Keys sent to the current keyboard focus
     std::multiset<uint32_t> pressed_keys;
     void transfer_grab(wf::scene::node_ptr new_focus);
diff --git a/src/core/seat/seat.cpp b/src/core/seat/seat.cpp
index 40ee3ad6..b47b32be 100644
--- a/src/core/seat/seat.cpp
+++ b/src/core/seat/seat.cpp
@@ -500,6 +500,7 @@ void wf::seat_t::impl::transfer_grab(wf::scene::node_ptr grab_node)
     }
 
     this->keyboard_focus = grab_node;
+    this->is_grab = true;
     grab_node->keyboard_interaction().handle_keyboard_enter(wf::get_core().seat.get());
 
     wf::keyboard_focus_changed_signal data;
@@ -521,6 +522,7 @@ void wf::seat_t::impl::set_keyboard_focus(wf::scene::node_ptr new_focus)
     }
 
     this->keyboard_focus = new_focus;
+    this->is_grab = false;
     if (new_focus)
     {
         new_focus->keyboard_interaction().handle_keyboard_enter(wf::get_core().seat.get());
-- 
2.43.0

